#pragma checksum "C:\Users\Bilel\source\repos\Plenner\Planner\WorkingHoursPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "DA71A7C685DD4B2601C23C84814E589E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Planner
{
    partial class WorkingHoursPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        private class WorkingHoursPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IWorkingHoursPage_Bindings
        {
            private global::Planner.WorkingHoursPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ListView obj2;

            public WorkingHoursPage_obj1_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // WorkingHoursPage.xaml line 62
                        this.obj2 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    default:
                        break;
                }
            }

            // IWorkingHoursPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Planner.WorkingHoursPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Planner.WorkingHoursPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Place(obj.Place, phase);
                    }
                }
            }
            private void Update_Place(global::DataLab.Data.Work.WorkingPlace obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Place_WorkedHours(obj.WorkedHours, phase);
                    }
                }
            }
            private void Update_Place_WorkedHours(global::System.Collections.ObjectModel.ObservableCollection<global::DataLab.Data.Work.WorkingHours> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // WorkingHoursPage.xaml line 62
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj2, obj, null);
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 3: // WorkingHoursPage.xaml line 17
                {
                    this.addNewHoursButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.addNewHoursButton).Click += this.addNewHoursButton_Click;
                }
                break;
            case 4: // WorkingHoursPage.xaml line 26
                {
                    this.startRadioButton = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.startRadioButton).Click += this.startRadioButton_Click;
                }
                break;
            case 5: // WorkingHoursPage.xaml line 38
                {
                    this.endRadioButton = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.endRadioButton).Click += this.endRadioButton_Click;
                }
                break;
            case 6: // WorkingHoursPage.xaml line 50
                {
                    this.addTheHoursButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.addTheHoursButton).Click += this.addTheHoursButton_Click;
                }
                break;
            case 7: // WorkingHoursPage.xaml line 40
                {
                    this.endRadioButtonFlyout = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.endRadioButtonFlyout).Closed += this.endRadioButtonFlyout_Closed;
                }
                break;
            case 8: // WorkingHoursPage.xaml line 42
                {
                    this.endtextBlock2 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 9: // WorkingHoursPage.xaml line 43
                {
                    this.enddatePicker = (global::Windows.UI.Xaml.Controls.DatePicker)(target);
                }
                break;
            case 10: // WorkingHoursPage.xaml line 44
                {
                    this.endtextBlock3 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 11: // WorkingHoursPage.xaml line 45
                {
                    this.endtimePicker = (global::Windows.UI.Xaml.Controls.TimePicker)(target);
                }
                break;
            case 12: // WorkingHoursPage.xaml line 28
                {
                    this.startRadioButtonFlyout = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.startRadioButtonFlyout).Closed += this.startRadioButtonFlyout_Closed;
                }
                break;
            case 13: // WorkingHoursPage.xaml line 30
                {
                    this.starttextBlock2 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 14: // WorkingHoursPage.xaml line 31
                {
                    this.startdatePicker = (global::Windows.UI.Xaml.Controls.DatePicker)(target);
                }
                break;
            case 15: // WorkingHoursPage.xaml line 32
                {
                    this.starttextBlock3 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 16: // WorkingHoursPage.xaml line 33
                {
                    this.starttimePicker = (global::Windows.UI.Xaml.Controls.TimePicker)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // WorkingHoursPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    WorkingHoursPage_obj1_Bindings bindings = new WorkingHoursPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

